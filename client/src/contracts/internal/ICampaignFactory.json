{
  "contractName": "ICampaignFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ICampaign",
          "name": "_newCampaign",
          "type": "address"
        }
      ],
      "name": "addCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "deployProposalContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "updateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_campaignCreatorContract",
          "type": "address"
        }
      ],
      "name": "setCampaignCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICampaign\",\"name\":\"_newCampaign\",\"type\":\"address\"}],\"name\":\"addCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"deployProposalContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_campaignCreatorContract\",\"type\":\"address\"}],\"name\":\"setCampaignCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the CampaignFactory contract\",\"kind\":\"dev\",\"methods\":{\"addCampaign(address)\":{\"params\":{\"_newCampaign\":\"The address of the campaign created from the campaignCreator\"}},\"deleteCampaign()\":{\"details\":\"Only an contract already deployed must be able to call this function\"},\"deployProposalContract(address)\":{\"details\":\"Can only be called by an existing campaign contract.\",\"params\":{\"_manager\":\"The campaign manager address.\"}},\"setCampaignCreator(address)\":{\"details\":\"Only the actual owner must be able to call this function\",\"params\":{\"_campaignCreatorContract\":\"The campaignCreator contract address\"}},\"updateOwner(address)\":{\"details\":\"Only the actual owner must be able to call this function\",\"params\":{\"_newOwner\":\"The new owner address\"}}},\"title\":\"ICampaignFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addCampaign(address)\":{\"notice\":\"Add campaign contract address to mapping\"},\"deleteCampaign()\":{\"notice\":\"Delete a new Campaign that call this function.\"},\"deployProposalContract(address)\":{\"notice\":\"Deploy the proposal contract for a campaign.\"},\"setCampaignCreator(address)\":{\"notice\":\"Allow the owner to set campaignCreator contract address.\"},\"updateOwner(address)\":{\"notice\":\"Allow the owner to set a new owner for the factory.\"}},\"notice\":\"The Campaign factory facilitate the storage of campaign addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol\":\"ICampaignFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0x42c9eb53148f22f97107acf9c1c58bc58cb060301c9ca4713fe1e45f199c64cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9417381dae947e66aa810ff9f646f5ed9068a569742019fc61f6c6da358c8554\",\"dweb:/ipfs/QmXo1DAquEER9142Az5JqCt9DkPAqcfeihPhmAUZG76teu\"]},\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol\":{\"keccak256\":\"0x9d1d9330c3d03a2682d153440586de72e188c2b258ebbf6fd7355b8c03dd49aa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f9fc50e99211efeb25cb686d80e09cd18e2111301f84788e7ffb8cebb7027499\",\"dweb:/ipfs/QmZL9YcBD3wbTUmKJJB4Zh5XKaA1xxi6wnoonUEJpkGDnN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.6;\r\n\r\nimport \"../interfaces/ICampaign.sol\";\r\n\r\n/**\r\n* @title ICampaignFactory\r\n* @notice The Campaign factory facilitate the storage of campaign addresses\r\n* @dev Interface for the CampaignFactory contract\r\n*/\r\ninterface ICampaignFactory {\r\n\r\n    /**\r\n     * @notice Add campaign contract address to mapping\r\n     * @param _newCampaign The address of the campaign created from the campaignCreator\r\n     */\r\n    function addCampaign(ICampaign _newCampaign) external;\r\n\r\n    /**\r\n     * @notice Deploy the proposal contract for a campaign.\r\n     * @param _manager The campaign manager address.\r\n     * @dev Can only be called by an existing campaign contract.\r\n     */\r\n    function deployProposalContract(address _manager) external;\r\n\r\n    /**\r\n     * @notice Delete a new Campaign that call this function.\r\n     * @dev Only an contract already deployed must be able to call this function\r\n     */\r\n    function deleteCampaign() external;\r\n\r\n    /**\r\n     * @notice Allow the owner to set a new owner for the factory.\r\n     * @dev Only the actual owner must be able to call this function\r\n     * @param _newOwner The new owner address\r\n     */\r\n    function updateOwner(address _newOwner) external;\r\n\r\n    /**\r\n     * @notice Allow the owner to set campaignCreator contract address.\r\n     * @dev Only the actual owner must be able to call this function\r\n     * @param _campaignCreatorContract The campaignCreator contract address\r\n     */\r\n    function setCampaignCreator(address _campaignCreatorContract) external;\r\n}\r\n",
  "sourcePath": "A:\\Programing\\Projet_Final\\SparkUp\\contracts\\interfaces\\ICampaignFactory.sol",
  "ast": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol",
    "exportedSymbols": {
      "ICampaign": [
        2135
      ],
      "ICampaignFactory": [
        2169
      ]
    },
    "id": 2170,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:7"
      },
      {
        "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
        "file": "../interfaces/ICampaign.sol",
        "id": 2138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 2136,
        "src": "64:37:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2139,
          "nodeType": "StructuredDocumentation",
          "src": "105:162:7",
          "text": " @title ICampaignFactory\n @notice The Campaign factory facilitate the storage of campaign addresses\n @dev Interface for the CampaignFactory contract"
        },
        "fullyImplemented": false,
        "id": 2169,
        "linearizedBaseContracts": [
          2169
        ],
        "name": "ICampaignFactory",
        "nameLocation": "279:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2140,
              "nodeType": "StructuredDocumentation",
              "src": "305:158:7",
              "text": " @notice Add campaign contract address to mapping\n @param _newCampaign The address of the campaign created from the campaignCreator"
            },
            "functionSelector": "ac9c4fd3",
            "id": 2146,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addCampaign",
            "nameLocation": "478:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "_newCampaign",
                  "nameLocation": "500:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "490:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICampaign_$2135",
                    "typeString": "contract ICampaign"
                  },
                  "typeName": {
                    "id": 2142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2141,
                      "name": "ICampaign",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2135,
                      "src": "490:9:7"
                    },
                    "referencedDeclaration": 2135,
                    "src": "490:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICampaign_$2135",
                      "typeString": "contract ICampaign"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:24:7"
            },
            "returnParameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:7"
            },
            "scope": 2169,
            "src": "469:54:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2147,
              "nodeType": "StructuredDocumentation",
              "src": "531:193:7",
              "text": " @notice Deploy the proposal contract for a campaign.\n @param _manager The campaign manager address.\n @dev Can only be called by an existing campaign contract."
            },
            "functionSelector": "8b89df4f",
            "id": 2152,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deployProposalContract",
            "nameLocation": "739:22:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2149,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "770:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2152,
                  "src": "762:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:18:7"
            },
            "returnParameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:7"
            },
            "scope": 2169,
            "src": "730:59:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2153,
              "nodeType": "StructuredDocumentation",
              "src": "797:157:7",
              "text": " @notice Delete a new Campaign that call this function.\n @dev Only an contract already deployed must be able to call this function"
            },
            "functionSelector": "244c3c2c",
            "id": 2156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "969:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:2:7"
            },
            "returnParameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:0:7"
            },
            "scope": 2169,
            "src": "960:35:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2157,
              "nodeType": "StructuredDocumentation",
              "src": "1003:197:7",
              "text": " @notice Allow the owner to set a new owner for the factory.\n @dev Only the actual owner must be able to call this function\n @param _newOwner The new owner address"
            },
            "functionSelector": "880cdc31",
            "id": 2162,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwner",
            "nameLocation": "1215:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2159,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1235:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "1227:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:19:7"
            },
            "returnParameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1254:0:7"
            },
            "scope": 2169,
            "src": "1206:49:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2163,
              "nodeType": "StructuredDocumentation",
              "src": "1263:232:7",
              "text": " @notice Allow the owner to set campaignCreator contract address.\n @dev Only the actual owner must be able to call this function\n @param _campaignCreatorContract The campaignCreator contract address"
            },
            "functionSelector": "26f82fe8",
            "id": 2168,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setCampaignCreator",
            "nameLocation": "1510:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "_campaignCreatorContract",
                  "nameLocation": "1537:24:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "1529:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:34:7"
            },
            "returnParameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:0:7"
            },
            "scope": 2169,
            "src": "1501:71:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2170,
        "src": "269:1306:7",
        "usedErrors": []
      }
    ],
    "src": "37:1540:7"
  },
  "legacyAST": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaignFactory.sol",
    "exportedSymbols": {
      "ICampaign": [
        2135
      ],
      "ICampaignFactory": [
        2169
      ]
    },
    "id": 2170,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2137,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:7"
      },
      {
        "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
        "file": "../interfaces/ICampaign.sol",
        "id": 2138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2170,
        "sourceUnit": 2136,
        "src": "64:37:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2139,
          "nodeType": "StructuredDocumentation",
          "src": "105:162:7",
          "text": " @title ICampaignFactory\n @notice The Campaign factory facilitate the storage of campaign addresses\n @dev Interface for the CampaignFactory contract"
        },
        "fullyImplemented": false,
        "id": 2169,
        "linearizedBaseContracts": [
          2169
        ],
        "name": "ICampaignFactory",
        "nameLocation": "279:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2140,
              "nodeType": "StructuredDocumentation",
              "src": "305:158:7",
              "text": " @notice Add campaign contract address to mapping\n @param _newCampaign The address of the campaign created from the campaignCreator"
            },
            "functionSelector": "ac9c4fd3",
            "id": 2146,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addCampaign",
            "nameLocation": "478:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "_newCampaign",
                  "nameLocation": "500:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "490:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICampaign_$2135",
                    "typeString": "contract ICampaign"
                  },
                  "typeName": {
                    "id": 2142,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2141,
                      "name": "ICampaign",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2135,
                      "src": "490:9:7"
                    },
                    "referencedDeclaration": 2135,
                    "src": "490:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICampaign_$2135",
                      "typeString": "contract ICampaign"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:24:7"
            },
            "returnParameters": {
              "id": 2145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:7"
            },
            "scope": 2169,
            "src": "469:54:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2147,
              "nodeType": "StructuredDocumentation",
              "src": "531:193:7",
              "text": " @notice Deploy the proposal contract for a campaign.\n @param _manager The campaign manager address.\n @dev Can only be called by an existing campaign contract."
            },
            "functionSelector": "8b89df4f",
            "id": 2152,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deployProposalContract",
            "nameLocation": "739:22:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2149,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "770:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2152,
                  "src": "762:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:18:7"
            },
            "returnParameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:0:7"
            },
            "scope": 2169,
            "src": "730:59:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2153,
              "nodeType": "StructuredDocumentation",
              "src": "797:157:7",
              "text": " @notice Delete a new Campaign that call this function.\n @dev Only an contract already deployed must be able to call this function"
            },
            "functionSelector": "244c3c2c",
            "id": 2156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "969:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:2:7"
            },
            "returnParameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:0:7"
            },
            "scope": 2169,
            "src": "960:35:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2157,
              "nodeType": "StructuredDocumentation",
              "src": "1003:197:7",
              "text": " @notice Allow the owner to set a new owner for the factory.\n @dev Only the actual owner must be able to call this function\n @param _newOwner The new owner address"
            },
            "functionSelector": "880cdc31",
            "id": 2162,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOwner",
            "nameLocation": "1215:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2159,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1235:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2162,
                  "src": "1227:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:19:7"
            },
            "returnParameters": {
              "id": 2161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1254:0:7"
            },
            "scope": 2169,
            "src": "1206:49:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2163,
              "nodeType": "StructuredDocumentation",
              "src": "1263:232:7",
              "text": " @notice Allow the owner to set campaignCreator contract address.\n @dev Only the actual owner must be able to call this function\n @param _campaignCreatorContract The campaignCreator contract address"
            },
            "functionSelector": "26f82fe8",
            "id": 2168,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setCampaignCreator",
            "nameLocation": "1510:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "_campaignCreatorContract",
                  "nameLocation": "1537:24:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "1529:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:34:7"
            },
            "returnParameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1571:0:7"
            },
            "scope": 2169,
            "src": "1501:71:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2170,
        "src": "269:1306:7",
        "usedErrors": []
      }
    ],
    "src": "37:1540:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-16T18:46:21.283Z",
  "devdoc": {
    "details": "Interface for the CampaignFactory contract",
    "kind": "dev",
    "methods": {
      "addCampaign(address)": {
        "params": {
          "_newCampaign": "The address of the campaign created from the campaignCreator"
        }
      },
      "deleteCampaign()": {
        "details": "Only an contract already deployed must be able to call this function"
      },
      "deployProposalContract(address)": {
        "details": "Can only be called by an existing campaign contract.",
        "params": {
          "_manager": "The campaign manager address."
        }
      },
      "setCampaignCreator(address)": {
        "details": "Only the actual owner must be able to call this function",
        "params": {
          "_campaignCreatorContract": "The campaignCreator contract address"
        }
      },
      "updateOwner(address)": {
        "details": "Only the actual owner must be able to call this function",
        "params": {
          "_newOwner": "The new owner address"
        }
      }
    },
    "title": "ICampaignFactory",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addCampaign(address)": {
        "notice": "Add campaign contract address to mapping"
      },
      "deleteCampaign()": {
        "notice": "Delete a new Campaign that call this function."
      },
      "deployProposalContract(address)": {
        "notice": "Deploy the proposal contract for a campaign."
      },
      "setCampaignCreator(address)": {
        "notice": "Allow the owner to set campaignCreator contract address."
      },
      "updateOwner(address)": {
        "notice": "Allow the owner to set a new owner for the factory."
      }
    },
    "notice": "The Campaign factory facilitate the storage of campaign addresses",
    "version": 1
  }
}