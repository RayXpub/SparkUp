{
  "contractName": "ICampaign",
  "abi": [
    {
      "inputs": [],
      "name": "getCampaignInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "deadlineDate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "fundingGoal",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum ICampaign.WorkflowStatus",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint64",
              "name": "deadlineDate",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "fundingGoal",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICampaign.Info",
          "name": "_updatedInfoData",
          "type": "tuple"
        }
      ],
      "name": "updateCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "stockLimit",
              "type": "uint16"
            },
            {
              "internalType": "uint64",
              "name": "nbContributors",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "minimumContribution",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "_newRewardData",
          "type": "tuple"
        }
      ],
      "name": "addReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isStockLimited",
              "type": "bool"
            },
            {
              "internalType": "uint16",
              "name": "stockLimit",
              "type": "uint16"
            },
            {
              "internalType": "uint64",
              "name": "nbContributors",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "minimumContribution",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "internalType": "struct ICampaign.Rewards",
          "name": "_newRewardData",
          "type": "tuple"
        },
        {
          "internalType": "uint8",
          "name": "_rewardIndex",
          "type": "uint8"
        }
      ],
      "name": "updateReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_rewardIndex",
          "type": "uint8"
        }
      ],
      "name": "deleteReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newManager",
          "type": "address"
        }
      ],
      "name": "updateManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publishCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        },
        {
          "internalType": "uint8",
          "name": "_rewardIndex",
          "type": "uint8"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "launchProposalContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposalContract",
          "type": "address"
        }
      ],
      "name": "setProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_amount",
          "type": "uint128"
        }
      ],
      "name": "releaseProposalFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getContributorBalances",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractUSDCBalance",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"stockLimit\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"nbContributors\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"minimumContribution\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"_newRewardData\",\"type\":\"tuple\"}],\"name\":\"addReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"uint8\",\"name\":\"_rewardIndex\",\"type\":\"uint8\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_rewardIndex\",\"type\":\"uint8\"}],\"name\":\"deleteReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"deadlineDate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"fundingGoal\",\"type\":\"uint128\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum ICampaign.WorkflowStatus\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractUSDCBalance\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getContributorBalances\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchProposalContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publishCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"}],\"name\":\"releaseProposalFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposalContract\",\"type\":\"address\"}],\"name\":\"setProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"deadlineDate\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"fundingGoal\",\"type\":\"uint128\"}],\"internalType\":\"struct ICampaign.Info\",\"name\":\"_updatedInfoData\",\"type\":\"tuple\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newManager\",\"type\":\"address\"}],\"name\":\"updateManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isStockLimited\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"stockLimit\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"nbContributors\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"minimumContribution\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"internalType\":\"struct ICampaign.Rewards\",\"name\":\"_newRewardData\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"_rewardIndex\",\"type\":\"uint8\"}],\"name\":\"updateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the Campaign contract\",\"kind\":\"dev\",\"methods\":{\"addReward((string,string,bool,uint16,uint64,uint128,uint128))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"_newRewardData\":\"The Rewards Object that contains all the needed information which follow the Rewards struct for the campaign\"}},\"contribute(uint128,uint8)\":{\"details\":\"Can only be called if campaign is published, is not completed, is not deleted and is not failed.\",\"params\":{\"_amount\":\"The Amount in USDC that msg.sender want to contribute\",\"_rewardIndex\":\"The reward's index\"}},\"deleteCampaign()\":{\"details\":\"It's the entry point for deleting a campaign. Only the manager must be able to call it\"},\"deleteReward(uint8)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"_rewardIndex\":\"The reward's index to delete\"}},\"getCampaignInfo()\":{\"returns\":{\"_0\":\"Info The campaign Info data set\",\"_1\":\"createAt The campaign creation date in timestamps\",\"_2\":\"manager The address of the campaign manager\",\"_3\":\"WorkflowStatus The workflow status of the campaign\",\"_4\":\"totalRaised The amount raised by the campaign in USDC\",\"_5\":\"proposalAddress The address of the proposal contract link to the campaign\"}},\"getContractUSDCBalance()\":{\"details\":\"Note that USDC using 6 decimals instead of 18\",\"returns\":{\"_0\":\"balance The current balance of the current contract\"}},\"getContributorBalances(address)\":{\"params\":{\"_account\":\"The contributor's address\"},\"returns\":{\"_0\":\"Amount The Amount contributed by the _account\"}},\"launchProposalContract()\":{\"details\":\"Can only be called by manager and if WorkflowStatus is FundingComplete.\"},\"publishCampaign()\":{\"details\":\"Only the manager must be able to call it and only within acceptable deadlineDate timeframe.\"},\"refund()\":{\"details\":\"Can only be called if campaign deadline is passed and fundingGoal not reached.\"},\"releaseProposalFunds(uint128)\":{\"details\":\"Can only be called by proposal contract when proposal is accepted.\",\"params\":{\"_amount\":\"The Amount of funding raised that must be transfer to the manager\"}},\"setProposal(address)\":{\"details\":\"Can only be called by campaign factory contract.\",\"params\":{\"_proposalContract\":\"The proposal contract's address\"}},\"updateCampaign((string,string,uint64,uint128))\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"_updatedInfoData\":\"is The Info Object that contains all the new information following the Info struct for the campaign\"}},\"updateManager(address)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"_newManager\":\"The new manager's address\"}},\"updateReward((string,string,bool,uint16,uint64,uint128,uint128),uint8)\":{\"details\":\"Only the manager must be able to call it.\",\"params\":{\"_newRewardData\":\"The rewards Object that contains the new data to set which follow the Rewards struct for the campaign\",\"_rewardIndex\":\"The reward's index to update\"}}},\"title\":\"ICampaign\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addReward((string,string,bool,uint16,uint64,uint128,uint128))\":{\"notice\":\"Add a new reward level to the campaign.\"},\"contribute(uint128,uint8)\":{\"notice\":\"Allow contributors to contribute to the campaign.\"},\"deleteCampaign()\":{\"notice\":\"Delete the campaign.\"},\"deleteReward(uint8)\":{\"notice\":\"Delete a reward by its Id.\"},\"getCampaignInfo()\":{\"notice\":\"Returns the campaign information in the struct Info plus de createAt and the managerAddress.\"},\"getContractUSDCBalance()\":{\"notice\":\"Make _campaignUSDCBalance available to external and used by Interface\"},\"getContributorBalances(address)\":{\"notice\":\"Return the contribution balance in usdc for a specific address\"},\"launchProposalContract()\":{\"notice\":\"Allows manager to deploy proposal contract to start submitting proposals.\"},\"publishCampaign()\":{\"notice\":\"Allow the manager to publish campaign and make it visible to potential contributors.\"},\"refund()\":{\"notice\":\"Allow contributor to get refunded.\"},\"releaseProposalFunds(uint128)\":{\"notice\":\"Transfer unlocked funds to manager address.\"},\"setProposal(address)\":{\"notice\":\"Allows campaign factory contract to set proposal contract address.\"},\"updateCampaign((string,string,uint64,uint128))\":{\"notice\":\"Update the campaign information in the struct Info.\"},\"updateManager(address)\":{\"notice\":\"Allow the manager to setup a new one.\"},\"updateReward((string,string,bool,uint16,uint64,uint128,uint128),uint8)\":{\"notice\":\"Update the data of a specific reward regarding its id.\"}},\"notice\":\"The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":\"ICampaign\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol\":{\"keccak256\":\"0x42c9eb53148f22f97107acf9c1c58bc58cb060301c9ca4713fe1e45f199c64cf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9417381dae947e66aa810ff9f646f5ed9068a569742019fc61f6c6da358c8554\",\"dweb:/ipfs/QmXo1DAquEER9142Az5JqCt9DkPAqcfeihPhmAUZG76teu\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.6;\r\n\r\n/**\r\n* @title ICampaign\r\n* @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\r\n* @dev Interface for the Campaign contract\r\n*/\r\ninterface ICampaign {\r\n\r\n    struct Rewards {\r\n        string title;\r\n        string description;\r\n        bool isStockLimited;\r\n        uint16 stockLimit;\r\n        uint64 nbContributors;\r\n        uint128 minimumContribution;\r\n        uint128 amount;\r\n    }\r\n\r\n    struct Info {\r\n        string title;\r\n        string description;\r\n        uint64 deadlineDate;\r\n        uint128 fundingGoal;\r\n    }\r\n\r\n    enum WorkflowStatus {\r\n        CampaignDrafted,\r\n        CampaignPublished,\r\n        FundingComplete,\r\n        FundingFailed,\r\n        CampaignCompleted,\r\n        CampaignDeleted\r\n    }\r\n\r\n    /**\r\n     * @notice Returns the campaign information in the struct Info plus de createAt and the managerAddress.\r\n     * @return Info The campaign Info data set\r\n     * @return createAt The campaign creation date in timestamps\r\n     * @return manager The address of the campaign manager\r\n     * @return WorkflowStatus The workflow status of the campaign\r\n     * @return totalRaised The amount raised by the campaign in USDC\r\n     * @return proposalAddress The address of the proposal contract link to the campaign\r\n     */\r\n    function getCampaignInfo() external returns(Info memory, uint64, address, WorkflowStatus, uint128, address);\r\n\r\n    /**\r\n     * @notice Update the campaign information in the struct Info.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param _updatedInfoData is The Info Object that contains all the new information following the Info struct for the campaign\r\n     */\r\n    function updateCampaign(Info memory _updatedInfoData) external;\r\n\r\n    /**\r\n     * @notice Add a new reward level to the campaign.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param _newRewardData The Rewards Object that contains all the needed information which follow the Rewards struct for the campaign\r\n     */\r\n    function addReward(Rewards memory _newRewardData) external;\r\n\r\n    /**\r\n     * @notice Update the data of a specific reward regarding its id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param _newRewardData The rewards Object that contains the new data to set which follow the Rewards struct for the campaign\r\n     * @param _rewardIndex The reward's index to update\r\n     */\r\n    function updateReward( Rewards memory _newRewardData,uint8 _rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete a reward by its Id.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param _rewardIndex The reward's index to delete\r\n     */\r\n    function deleteReward(uint8 _rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Delete the campaign.\r\n     * @dev It's the entry point for deleting a campaign. Only the manager must be able to call it\r\n     */\r\n    function deleteCampaign() external;\r\n\r\n    /**\r\n     * @notice Allow the manager to setup a new one.\r\n     * @dev Only the manager must be able to call it.\r\n     * @param _newManager The new manager's address\r\n     */\r\n    function updateManager(address _newManager) external;\r\n    \r\n    /**\r\n     * @notice Allow the manager to publish campaign and make it visible to potential contributors.\r\n     * @dev Only the manager must be able to call it and only within acceptable deadlineDate timeframe.\r\n     */\r\n    function publishCampaign() external;\r\n    \r\n    /**\r\n     * @notice Allow contributors to contribute to the campaign.\r\n     * @dev Can only be called if campaign is published, is not completed, is not deleted and is not failed.\r\n     * @param _amount The Amount in USDC that msg.sender want to contribute\r\n     * @param _rewardIndex The reward's index\r\n     */\r\n    function contribute(uint128 _amount, uint8 _rewardIndex) external;\r\n\r\n    /**\r\n     * @notice Allow contributor to get refunded.\r\n     * @dev Can only be called if campaign deadline is passed and fundingGoal not reached.\r\n     */\r\n    function refund() external;\r\n\r\n    /**\r\n     * @notice Allows manager to deploy proposal contract to start submitting proposals.\r\n     * @dev Can only be called by manager and if WorkflowStatus is FundingComplete.\r\n     */\r\n    function launchProposalContract() external;\r\n\r\n    /**\r\n     * @notice Allows campaign factory contract to set proposal contract address.\r\n     * @dev Can only be called by campaign factory contract.\r\n     * @param _proposalContract The proposal contract's address\r\n     */\r\n    function setProposal(address _proposalContract) external;\r\n\r\n    /**\r\n     * @notice Transfer unlocked funds to manager address.\r\n     * @dev Can only be called by proposal contract when proposal is accepted.\r\n     * @param _amount The Amount of funding raised that must be transfer to the manager\r\n     */\r\n    function releaseProposalFunds(uint128 _amount) external;\r\n\r\n    /**\r\n     * @notice Return the contribution balance in usdc for a specific address\r\n     * @param _account The contributor's address\r\n     * @return Amount The Amount contributed by the _account\r\n     */\r\n    function getContributorBalances(address _account) external view returns(uint128);\r\n\r\n    /**\r\n     * @notice Make _campaignUSDCBalance available to external and used by Interface\r\n     * @dev Note that USDC using 6 decimals instead of 18\r\n     * @return balance The current balance of the current contract\r\n     */\r\n    function getContractUSDCBalance() external view returns(uint128);\r\n}\r\n",
  "sourcePath": "A:\\Programing\\Projet_Final\\SparkUp\\contracts\\interfaces\\ICampaign.sol",
  "ast": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        2135
      ]
    },
    "id": 2136,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1999,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2000,
          "nodeType": "StructuredDocumentation",
          "src": "64:179:6",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 2135,
        "linearizedBaseContracts": [
          2135
        ],
        "name": "ICampaign",
        "nameLocation": "255:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 2015,
            "members": [
              {
                "constant": false,
                "id": 2002,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "307:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "300:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2001,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "300:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2004,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "330:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "323:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2003,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "323:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2006,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "357:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "352:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2005,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2008,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "389:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "382:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 2007,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "382:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2010,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "417:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "410:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2009,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2012,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "450:19:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "442:27:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2011,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "442:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2014,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "488:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "480:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2013,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "480:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "281:7:6",
            "nodeType": "StructDefinition",
            "scope": 2135,
            "src": "274:228:6",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 2024,
            "members": [
              {
                "constant": false,
                "id": 2017,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "540:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "533:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2016,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "533:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2019,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "563:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "556:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2018,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2021,
                "mutability": "mutable",
                "name": "deadlineDate",
                "nameLocation": "592:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "585:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2020,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2023,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "623:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "615:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2022,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "615:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "517:4:6",
            "nodeType": "StructDefinition",
            "scope": 2135,
            "src": "510:132:6",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.WorkflowStatus",
            "id": 2031,
            "members": [
              {
                "id": 2025,
                "name": "CampaignDrafted",
                "nameLocation": "681:15:6",
                "nodeType": "EnumValue",
                "src": "681:15:6"
              },
              {
                "id": 2026,
                "name": "CampaignPublished",
                "nameLocation": "707:17:6",
                "nodeType": "EnumValue",
                "src": "707:17:6"
              },
              {
                "id": 2027,
                "name": "FundingComplete",
                "nameLocation": "735:15:6",
                "nodeType": "EnumValue",
                "src": "735:15:6"
              },
              {
                "id": 2028,
                "name": "FundingFailed",
                "nameLocation": "761:13:6",
                "nodeType": "EnumValue",
                "src": "761:13:6"
              },
              {
                "id": 2029,
                "name": "CampaignCompleted",
                "nameLocation": "785:17:6",
                "nodeType": "EnumValue",
                "src": "785:17:6"
              },
              {
                "id": 2030,
                "name": "CampaignDeleted",
                "nameLocation": "813:15:6",
                "nodeType": "EnumValue",
                "src": "813:15:6"
              }
            ],
            "name": "WorkflowStatus",
            "nameLocation": "655:14:6",
            "nodeType": "EnumDefinition",
            "src": "650:185:6"
          },
          {
            "documentation": {
              "id": 2032,
              "nodeType": "StructuredDocumentation",
              "src": "843:522:6",
              "text": " @notice Returns the campaign information in the struct Info plus de createAt and the managerAddress.\n @return Info The campaign Info data set\n @return createAt The campaign creation date in timestamps\n @return manager The address of the campaign manager\n @return WorkflowStatus The workflow status of the campaign\n @return totalRaised The amount raised by the campaign in USDC\n @return proposalAddress The address of the proposal contract link to the campaign"
            },
            "functionSelector": "d6290cd7",
            "id": 2049,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCampaignInfo",
            "nameLocation": "1380:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:2:6"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1415:11:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$2024_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 2035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2034,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2024,
                      "src": "1415:4:6"
                    },
                    "referencedDeclaration": 2024,
                    "src": "1415:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$2024_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1428:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1436:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1445:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WorkflowStatus_$2031",
                    "typeString": "enum ICampaign.WorkflowStatus"
                  },
                  "typeName": {
                    "id": 2042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2041,
                      "name": "WorkflowStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2031,
                      "src": "1445:14:6"
                    },
                    "referencedDeclaration": 2031,
                    "src": "1445:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkflowStatus_$2031",
                      "typeString": "enum ICampaign.WorkflowStatus"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1461:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1470:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:64:6"
            },
            "scope": 2135,
            "src": "1371:108:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2050,
              "nodeType": "StructuredDocumentation",
              "src": "1487:267:6",
              "text": " @notice Update the campaign information in the struct Info.\n @dev Only the manager must be able to call it.\n @param _updatedInfoData is The Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "cd3fea14",
            "id": 2056,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCampaign",
            "nameLocation": "1769:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "_updatedInfoData",
                  "nameLocation": "1796:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2056,
                  "src": "1784:28:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$2024_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 2052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2051,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2024,
                      "src": "1784:4:6"
                    },
                    "referencedDeclaration": 2024,
                    "src": "1784:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$2024_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:30:6"
            },
            "returnParameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:0:6"
            },
            "scope": 2135,
            "src": "1760:63:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2057,
              "nodeType": "StructuredDocumentation",
              "src": "1831:262:6",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param _newRewardData The Rewards Object that contains all the needed information which follow the Rewards struct for the campaign"
            },
            "functionSelector": "c97c5794",
            "id": 2063,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "2108:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "_newRewardData",
                  "nameLocation": "2133:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2063,
                  "src": "2118:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$2015_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 2059,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2058,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2015,
                      "src": "2118:7:6"
                    },
                    "referencedDeclaration": 2015,
                    "src": "2118:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$2015_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2117:31:6"
            },
            "returnParameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2157:0:6"
            },
            "scope": 2135,
            "src": "2099:59:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2064,
              "nodeType": "StructuredDocumentation",
              "src": "2166:327:6",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param _newRewardData The rewards Object that contains the new data to set which follow the Rewards struct for the campaign\n @param _rewardIndex The reward's index to update"
            },
            "functionSelector": "6d2ffd85",
            "id": 2072,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "2508:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "_newRewardData",
                  "nameLocation": "2537:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "2522:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$2015_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 2066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2065,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2015,
                      "src": "2522:7:6"
                    },
                    "referencedDeclaration": 2015,
                    "src": "2522:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$2015_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "mutability": "mutable",
                  "name": "_rewardIndex",
                  "nameLocation": "2558:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "2552:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:51:6"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2580:0:6"
            },
            "scope": 2135,
            "src": "2499:82:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2073,
              "nodeType": "StructuredDocumentation",
              "src": "2589:167:6",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param _rewardIndex The reward's index to delete"
            },
            "functionSelector": "e21641b8",
            "id": 2078,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "2771:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "_rewardIndex",
                  "nameLocation": "2790:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "2784:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2783:20:6"
            },
            "returnParameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2812:0:6"
            },
            "scope": 2135,
            "src": "2762:51:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2079,
              "nodeType": "StructuredDocumentation",
              "src": "2821:149:6",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 2082,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2985:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2999:2:6"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3010:0:6"
            },
            "scope": 2135,
            "src": "2976:35:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2083,
              "nodeType": "StructuredDocumentation",
              "src": "3019:174:6",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param _newManager The new manager's address"
            },
            "functionSelector": "58aba00f",
            "id": 2088,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "3208:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "_newManager",
                  "nameLocation": "3230:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2088,
                  "src": "3222:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:21:6"
            },
            "returnParameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3251:0:6"
            },
            "scope": 2135,
            "src": "3199:53:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2089,
              "nodeType": "StructuredDocumentation",
              "src": "3264:218:6",
              "text": " @notice Allow the manager to publish campaign and make it visible to potential contributors.\n @dev Only the manager must be able to call it and only within acceptable deadlineDate timeframe."
            },
            "functionSelector": "7ef59f84",
            "id": 2092,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "publishCampaign",
            "nameLocation": "3497:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3512:2:6"
            },
            "returnParameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3523:0:6"
            },
            "scope": 2135,
            "src": "3488:36:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2093,
              "nodeType": "StructuredDocumentation",
              "src": "3536:312:6",
              "text": " @notice Allow contributors to contribute to the campaign.\n @dev Can only be called if campaign is published, is not completed, is not deleted and is not failed.\n @param _amount The Amount in USDC that msg.sender want to contribute\n @param _rewardIndex The reward's index"
            },
            "functionSelector": "d0a5d845",
            "id": 2100,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nameLocation": "3863:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3882:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "3874:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "_rewardIndex",
                  "nameLocation": "3897:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "3891:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3873:37:6"
            },
            "returnParameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:0:6"
            },
            "scope": 2135,
            "src": "3854:66:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2101,
              "nodeType": "StructuredDocumentation",
              "src": "3928:155:6",
              "text": " @notice Allow contributor to get refunded.\n @dev Can only be called if campaign deadline is passed and fundingGoal not reached."
            },
            "functionSelector": "590e1ae3",
            "id": 2104,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "4098:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4104:2:6"
            },
            "returnParameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4115:0:6"
            },
            "scope": 2135,
            "src": "4089:27:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2105,
              "nodeType": "StructuredDocumentation",
              "src": "4124:187:6",
              "text": " @notice Allows manager to deploy proposal contract to start submitting proposals.\n @dev Can only be called by manager and if WorkflowStatus is FundingComplete."
            },
            "functionSelector": "0d4c4a2f",
            "id": 2108,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "launchProposalContract",
            "nameLocation": "4326:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:2:6"
            },
            "returnParameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:6"
            },
            "scope": 2135,
            "src": "4317:43:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2109,
              "nodeType": "StructuredDocumentation",
              "src": "4368:222:6",
              "text": " @notice Allows campaign factory contract to set proposal contract address.\n @dev Can only be called by campaign factory contract.\n @param _proposalContract The proposal contract's address"
            },
            "functionSelector": "72686b17",
            "id": 2114,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setProposal",
            "nameLocation": "4605:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2111,
                  "mutability": "mutable",
                  "name": "_proposalContract",
                  "nameLocation": "4625:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2114,
                  "src": "4617:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4617:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4616:27:6"
            },
            "returnParameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4652:0:6"
            },
            "scope": 2135,
            "src": "4596:57:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2115,
              "nodeType": "StructuredDocumentation",
              "src": "4661:241:6",
              "text": " @notice Transfer unlocked funds to manager address.\n @dev Can only be called by proposal contract when proposal is accepted.\n @param _amount The Amount of funding raised that must be transfer to the manager"
            },
            "functionSelector": "0a2d00d3",
            "id": 2120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "releaseProposalFunds",
            "nameLocation": "4917:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4946:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2120,
                  "src": "4938:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4938:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4937:17:6"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4963:0:6"
            },
            "scope": 2135,
            "src": "4908:56:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2121,
              "nodeType": "StructuredDocumentation",
              "src": "4972:203:6",
              "text": " @notice Return the contribution balance in usdc for a specific address\n @param _account The contributor's address\n @return Amount The Amount contributed by the _account"
            },
            "functionSelector": "fc436cd5",
            "id": 2128,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContributorBalances",
            "nameLocation": "5190:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5221:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "5213:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5212:18:6"
            },
            "returnParameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "5253:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5253:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5252:9:6"
            },
            "scope": 2135,
            "src": "5181:81:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2129,
              "nodeType": "StructuredDocumentation",
              "src": "5270:225:6",
              "text": " @notice Make _campaignUSDCBalance available to external and used by Interface\n @dev Note that USDC using 6 decimals instead of 18\n @return balance The current balance of the current contract"
            },
            "functionSelector": "002772c2",
            "id": 2134,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractUSDCBalance",
            "nameLocation": "5510:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5532:2:6"
            },
            "returnParameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2134,
                  "src": "5557:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2131,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5556:9:6"
            },
            "scope": 2135,
            "src": "5501:65:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2136,
        "src": "245:5324:6",
        "usedErrors": []
      }
    ],
    "src": "37:5534:6"
  },
  "legacyAST": {
    "absolutePath": "/A/Programing/Projet_Final/SparkUp/contracts/interfaces/ICampaign.sol",
    "exportedSymbols": {
      "ICampaign": [
        2135
      ]
    },
    "id": 2136,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1999,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2000,
          "nodeType": "StructuredDocumentation",
          "src": "64:179:6",
          "text": " @title ICampaign\n @notice The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.\n @dev Interface for the Campaign contract"
        },
        "fullyImplemented": false,
        "id": 2135,
        "linearizedBaseContracts": [
          2135
        ],
        "name": "ICampaign",
        "nameLocation": "255:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ICampaign.Rewards",
            "id": 2015,
            "members": [
              {
                "constant": false,
                "id": 2002,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "307:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "300:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2001,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "300:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2004,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "330:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "323:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2003,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "323:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2006,
                "mutability": "mutable",
                "name": "isStockLimited",
                "nameLocation": "357:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "352:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2005,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2008,
                "mutability": "mutable",
                "name": "stockLimit",
                "nameLocation": "389:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "382:17:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 2007,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "382:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2010,
                "mutability": "mutable",
                "name": "nbContributors",
                "nameLocation": "417:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "410:21:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2009,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2012,
                "mutability": "mutable",
                "name": "minimumContribution",
                "nameLocation": "450:19:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "442:27:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2011,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "442:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2014,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "488:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 2015,
                "src": "480:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2013,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "480:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rewards",
            "nameLocation": "281:7:6",
            "nodeType": "StructDefinition",
            "scope": 2135,
            "src": "274:228:6",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.Info",
            "id": 2024,
            "members": [
              {
                "constant": false,
                "id": 2017,
                "mutability": "mutable",
                "name": "title",
                "nameLocation": "540:5:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "533:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2016,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "533:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2019,
                "mutability": "mutable",
                "name": "description",
                "nameLocation": "563:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "556:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 2018,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2021,
                "mutability": "mutable",
                "name": "deadlineDate",
                "nameLocation": "592:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "585:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 2020,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "585:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2023,
                "mutability": "mutable",
                "name": "fundingGoal",
                "nameLocation": "623:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 2024,
                "src": "615:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 2022,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "615:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "517:4:6",
            "nodeType": "StructDefinition",
            "scope": 2135,
            "src": "510:132:6",
            "visibility": "public"
          },
          {
            "canonicalName": "ICampaign.WorkflowStatus",
            "id": 2031,
            "members": [
              {
                "id": 2025,
                "name": "CampaignDrafted",
                "nameLocation": "681:15:6",
                "nodeType": "EnumValue",
                "src": "681:15:6"
              },
              {
                "id": 2026,
                "name": "CampaignPublished",
                "nameLocation": "707:17:6",
                "nodeType": "EnumValue",
                "src": "707:17:6"
              },
              {
                "id": 2027,
                "name": "FundingComplete",
                "nameLocation": "735:15:6",
                "nodeType": "EnumValue",
                "src": "735:15:6"
              },
              {
                "id": 2028,
                "name": "FundingFailed",
                "nameLocation": "761:13:6",
                "nodeType": "EnumValue",
                "src": "761:13:6"
              },
              {
                "id": 2029,
                "name": "CampaignCompleted",
                "nameLocation": "785:17:6",
                "nodeType": "EnumValue",
                "src": "785:17:6"
              },
              {
                "id": 2030,
                "name": "CampaignDeleted",
                "nameLocation": "813:15:6",
                "nodeType": "EnumValue",
                "src": "813:15:6"
              }
            ],
            "name": "WorkflowStatus",
            "nameLocation": "655:14:6",
            "nodeType": "EnumDefinition",
            "src": "650:185:6"
          },
          {
            "documentation": {
              "id": 2032,
              "nodeType": "StructuredDocumentation",
              "src": "843:522:6",
              "text": " @notice Returns the campaign information in the struct Info plus de createAt and the managerAddress.\n @return Info The campaign Info data set\n @return createAt The campaign creation date in timestamps\n @return manager The address of the campaign manager\n @return WorkflowStatus The workflow status of the campaign\n @return totalRaised The amount raised by the campaign in USDC\n @return proposalAddress The address of the proposal contract link to the campaign"
            },
            "functionSelector": "d6290cd7",
            "id": 2049,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCampaignInfo",
            "nameLocation": "1380:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:2:6"
            },
            "returnParameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2036,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1415:11:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$2024_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 2035,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2034,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2024,
                      "src": "1415:4:6"
                    },
                    "referencedDeclaration": 2024,
                    "src": "1415:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$2024_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1428:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1436:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1436:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1445:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WorkflowStatus_$2031",
                    "typeString": "enum ICampaign.WorkflowStatus"
                  },
                  "typeName": {
                    "id": 2042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2041,
                      "name": "WorkflowStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2031,
                      "src": "1445:14:6"
                    },
                    "referencedDeclaration": 2031,
                    "src": "1445:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkflowStatus_$2031",
                      "typeString": "enum ICampaign.WorkflowStatus"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1461:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "1470:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1414:64:6"
            },
            "scope": 2135,
            "src": "1371:108:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2050,
              "nodeType": "StructuredDocumentation",
              "src": "1487:267:6",
              "text": " @notice Update the campaign information in the struct Info.\n @dev Only the manager must be able to call it.\n @param _updatedInfoData is The Info Object that contains all the new information following the Info struct for the campaign"
            },
            "functionSelector": "cd3fea14",
            "id": 2056,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateCampaign",
            "nameLocation": "1769:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2053,
                  "mutability": "mutable",
                  "name": "_updatedInfoData",
                  "nameLocation": "1796:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2056,
                  "src": "1784:28:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$2024_memory_ptr",
                    "typeString": "struct ICampaign.Info"
                  },
                  "typeName": {
                    "id": 2052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2051,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2024,
                      "src": "1784:4:6"
                    },
                    "referencedDeclaration": 2024,
                    "src": "1784:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$2024_storage_ptr",
                      "typeString": "struct ICampaign.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:30:6"
            },
            "returnParameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:0:6"
            },
            "scope": 2135,
            "src": "1760:63:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2057,
              "nodeType": "StructuredDocumentation",
              "src": "1831:262:6",
              "text": " @notice Add a new reward level to the campaign.\n @dev Only the manager must be able to call it.\n @param _newRewardData The Rewards Object that contains all the needed information which follow the Rewards struct for the campaign"
            },
            "functionSelector": "c97c5794",
            "id": 2063,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addReward",
            "nameLocation": "2108:9:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "_newRewardData",
                  "nameLocation": "2133:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2063,
                  "src": "2118:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$2015_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 2059,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2058,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2015,
                      "src": "2118:7:6"
                    },
                    "referencedDeclaration": 2015,
                    "src": "2118:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$2015_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2117:31:6"
            },
            "returnParameters": {
              "id": 2062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2157:0:6"
            },
            "scope": 2135,
            "src": "2099:59:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2064,
              "nodeType": "StructuredDocumentation",
              "src": "2166:327:6",
              "text": " @notice Update the data of a specific reward regarding its id.\n @dev Only the manager must be able to call it.\n @param _newRewardData The rewards Object that contains the new data to set which follow the Rewards struct for the campaign\n @param _rewardIndex The reward's index to update"
            },
            "functionSelector": "6d2ffd85",
            "id": 2072,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateReward",
            "nameLocation": "2508:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "_newRewardData",
                  "nameLocation": "2537:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "2522:29:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rewards_$2015_memory_ptr",
                    "typeString": "struct ICampaign.Rewards"
                  },
                  "typeName": {
                    "id": 2066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2065,
                      "name": "Rewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2015,
                      "src": "2522:7:6"
                    },
                    "referencedDeclaration": 2015,
                    "src": "2522:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rewards_$2015_storage_ptr",
                      "typeString": "struct ICampaign.Rewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2069,
                  "mutability": "mutable",
                  "name": "_rewardIndex",
                  "nameLocation": "2558:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "2552:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2068,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:51:6"
            },
            "returnParameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2580:0:6"
            },
            "scope": 2135,
            "src": "2499:82:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2073,
              "nodeType": "StructuredDocumentation",
              "src": "2589:167:6",
              "text": " @notice Delete a reward by its Id.\n @dev Only the manager must be able to call it.\n @param _rewardIndex The reward's index to delete"
            },
            "functionSelector": "e21641b8",
            "id": 2078,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteReward",
            "nameLocation": "2771:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "_rewardIndex",
                  "nameLocation": "2790:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2078,
                  "src": "2784:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2783:20:6"
            },
            "returnParameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2812:0:6"
            },
            "scope": 2135,
            "src": "2762:51:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2079,
              "nodeType": "StructuredDocumentation",
              "src": "2821:149:6",
              "text": " @notice Delete the campaign.\n @dev It's the entry point for deleting a campaign. Only the manager must be able to call it"
            },
            "functionSelector": "244c3c2c",
            "id": 2082,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteCampaign",
            "nameLocation": "2985:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2999:2:6"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3010:0:6"
            },
            "scope": 2135,
            "src": "2976:35:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2083,
              "nodeType": "StructuredDocumentation",
              "src": "3019:174:6",
              "text": " @notice Allow the manager to setup a new one.\n @dev Only the manager must be able to call it.\n @param _newManager The new manager's address"
            },
            "functionSelector": "58aba00f",
            "id": 2088,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateManager",
            "nameLocation": "3208:13:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2085,
                  "mutability": "mutable",
                  "name": "_newManager",
                  "nameLocation": "3230:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2088,
                  "src": "3222:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3222:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:21:6"
            },
            "returnParameters": {
              "id": 2087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3251:0:6"
            },
            "scope": 2135,
            "src": "3199:53:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2089,
              "nodeType": "StructuredDocumentation",
              "src": "3264:218:6",
              "text": " @notice Allow the manager to publish campaign and make it visible to potential contributors.\n @dev Only the manager must be able to call it and only within acceptable deadlineDate timeframe."
            },
            "functionSelector": "7ef59f84",
            "id": 2092,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "publishCampaign",
            "nameLocation": "3497:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3512:2:6"
            },
            "returnParameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3523:0:6"
            },
            "scope": 2135,
            "src": "3488:36:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2093,
              "nodeType": "StructuredDocumentation",
              "src": "3536:312:6",
              "text": " @notice Allow contributors to contribute to the campaign.\n @dev Can only be called if campaign is published, is not completed, is not deleted and is not failed.\n @param _amount The Amount in USDC that msg.sender want to contribute\n @param _rewardIndex The reward's index"
            },
            "functionSelector": "d0a5d845",
            "id": 2100,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nameLocation": "3863:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3882:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "3874:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3874:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "_rewardIndex",
                  "nameLocation": "3897:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2100,
                  "src": "3891:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3891:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3873:37:6"
            },
            "returnParameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:0:6"
            },
            "scope": 2135,
            "src": "3854:66:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2101,
              "nodeType": "StructuredDocumentation",
              "src": "3928:155:6",
              "text": " @notice Allow contributor to get refunded.\n @dev Can only be called if campaign deadline is passed and fundingGoal not reached."
            },
            "functionSelector": "590e1ae3",
            "id": 2104,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "4098:6:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4104:2:6"
            },
            "returnParameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4115:0:6"
            },
            "scope": 2135,
            "src": "4089:27:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2105,
              "nodeType": "StructuredDocumentation",
              "src": "4124:187:6",
              "text": " @notice Allows manager to deploy proposal contract to start submitting proposals.\n @dev Can only be called by manager and if WorkflowStatus is FundingComplete."
            },
            "functionSelector": "0d4c4a2f",
            "id": 2108,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "launchProposalContract",
            "nameLocation": "4326:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:2:6"
            },
            "returnParameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4359:0:6"
            },
            "scope": 2135,
            "src": "4317:43:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2109,
              "nodeType": "StructuredDocumentation",
              "src": "4368:222:6",
              "text": " @notice Allows campaign factory contract to set proposal contract address.\n @dev Can only be called by campaign factory contract.\n @param _proposalContract The proposal contract's address"
            },
            "functionSelector": "72686b17",
            "id": 2114,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setProposal",
            "nameLocation": "4605:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2111,
                  "mutability": "mutable",
                  "name": "_proposalContract",
                  "nameLocation": "4625:17:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2114,
                  "src": "4617:25:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4617:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4616:27:6"
            },
            "returnParameters": {
              "id": 2113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4652:0:6"
            },
            "scope": 2135,
            "src": "4596:57:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2115,
              "nodeType": "StructuredDocumentation",
              "src": "4661:241:6",
              "text": " @notice Transfer unlocked funds to manager address.\n @dev Can only be called by proposal contract when proposal is accepted.\n @param _amount The Amount of funding raised that must be transfer to the manager"
            },
            "functionSelector": "0a2d00d3",
            "id": 2120,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "releaseProposalFunds",
            "nameLocation": "4917:20:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4946:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2120,
                  "src": "4938:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4938:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4937:17:6"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4963:0:6"
            },
            "scope": 2135,
            "src": "4908:56:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2121,
              "nodeType": "StructuredDocumentation",
              "src": "4972:203:6",
              "text": " @notice Return the contribution balance in usdc for a specific address\n @param _account The contributor's address\n @return Amount The Amount contributed by the _account"
            },
            "functionSelector": "fc436cd5",
            "id": 2128,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContributorBalances",
            "nameLocation": "5190:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2123,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "5221:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "5213:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5212:18:6"
            },
            "returnParameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "5253:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5253:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5252:9:6"
            },
            "scope": 2135,
            "src": "5181:81:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2129,
              "nodeType": "StructuredDocumentation",
              "src": "5270:225:6",
              "text": " @notice Make _campaignUSDCBalance available to external and used by Interface\n @dev Note that USDC using 6 decimals instead of 18\n @return balance The current balance of the current contract"
            },
            "functionSelector": "002772c2",
            "id": 2134,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getContractUSDCBalance",
            "nameLocation": "5510:22:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5532:2:6"
            },
            "returnParameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2134,
                  "src": "5557:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2131,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5556:9:6"
            },
            "scope": 2135,
            "src": "5501:65:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2136,
        "src": "245:5324:6",
        "usedErrors": []
      }
    ],
    "src": "37:5534:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-16T18:46:21.282Z",
  "devdoc": {
    "details": "Interface for the Campaign contract",
    "kind": "dev",
    "methods": {
      "addReward((string,string,bool,uint16,uint64,uint128,uint128))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "_newRewardData": "The Rewards Object that contains all the needed information which follow the Rewards struct for the campaign"
        }
      },
      "contribute(uint128,uint8)": {
        "details": "Can only be called if campaign is published, is not completed, is not deleted and is not failed.",
        "params": {
          "_amount": "The Amount in USDC that msg.sender want to contribute",
          "_rewardIndex": "The reward's index"
        }
      },
      "deleteCampaign()": {
        "details": "It's the entry point for deleting a campaign. Only the manager must be able to call it"
      },
      "deleteReward(uint8)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "_rewardIndex": "The reward's index to delete"
        }
      },
      "getCampaignInfo()": {
        "returns": {
          "_0": "Info The campaign Info data set",
          "_1": "createAt The campaign creation date in timestamps",
          "_2": "manager The address of the campaign manager",
          "_3": "WorkflowStatus The workflow status of the campaign",
          "_4": "totalRaised The amount raised by the campaign in USDC",
          "_5": "proposalAddress The address of the proposal contract link to the campaign"
        }
      },
      "getContractUSDCBalance()": {
        "details": "Note that USDC using 6 decimals instead of 18",
        "returns": {
          "_0": "balance The current balance of the current contract"
        }
      },
      "getContributorBalances(address)": {
        "params": {
          "_account": "The contributor's address"
        },
        "returns": {
          "_0": "Amount The Amount contributed by the _account"
        }
      },
      "launchProposalContract()": {
        "details": "Can only be called by manager and if WorkflowStatus is FundingComplete."
      },
      "publishCampaign()": {
        "details": "Only the manager must be able to call it and only within acceptable deadlineDate timeframe."
      },
      "refund()": {
        "details": "Can only be called if campaign deadline is passed and fundingGoal not reached."
      },
      "releaseProposalFunds(uint128)": {
        "details": "Can only be called by proposal contract when proposal is accepted.",
        "params": {
          "_amount": "The Amount of funding raised that must be transfer to the manager"
        }
      },
      "setProposal(address)": {
        "details": "Can only be called by campaign factory contract.",
        "params": {
          "_proposalContract": "The proposal contract's address"
        }
      },
      "updateCampaign((string,string,uint64,uint128))": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "_updatedInfoData": "is The Info Object that contains all the new information following the Info struct for the campaign"
        }
      },
      "updateManager(address)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "_newManager": "The new manager's address"
        }
      },
      "updateReward((string,string,bool,uint16,uint64,uint128,uint128),uint8)": {
        "details": "Only the manager must be able to call it.",
        "params": {
          "_newRewardData": "The rewards Object that contains the new data to set which follow the Rewards struct for the campaign",
          "_rewardIndex": "The reward's index to update"
        }
      }
    },
    "title": "ICampaign",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addReward((string,string,bool,uint16,uint64,uint128,uint128))": {
        "notice": "Add a new reward level to the campaign."
      },
      "contribute(uint128,uint8)": {
        "notice": "Allow contributors to contribute to the campaign."
      },
      "deleteCampaign()": {
        "notice": "Delete the campaign."
      },
      "deleteReward(uint8)": {
        "notice": "Delete a reward by its Id."
      },
      "getCampaignInfo()": {
        "notice": "Returns the campaign information in the struct Info plus de createAt and the managerAddress."
      },
      "getContractUSDCBalance()": {
        "notice": "Make _campaignUSDCBalance available to external and used by Interface"
      },
      "getContributorBalances(address)": {
        "notice": "Return the contribution balance in usdc for a specific address"
      },
      "launchProposalContract()": {
        "notice": "Allows manager to deploy proposal contract to start submitting proposals."
      },
      "publishCampaign()": {
        "notice": "Allow the manager to publish campaign and make it visible to potential contributors."
      },
      "refund()": {
        "notice": "Allow contributor to get refunded."
      },
      "releaseProposalFunds(uint128)": {
        "notice": "Transfer unlocked funds to manager address."
      },
      "setProposal(address)": {
        "notice": "Allows campaign factory contract to set proposal contract address."
      },
      "updateCampaign((string,string,uint64,uint128))": {
        "notice": "Update the campaign information in the struct Info."
      },
      "updateManager(address)": {
        "notice": "Allow the manager to setup a new one."
      },
      "updateReward((string,string,bool,uint16,uint64,uint128,uint128),uint8)": {
        "notice": "Update the data of a specific reward regarding its id."
      }
    },
    "notice": "The Campaign contract handle the all life of one Campaign. It's generate by the CampaignFactory.",
    "version": 1
  }
}